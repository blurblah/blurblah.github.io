<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blurblah.github.io/</id>
    <title>My Site Blog</title>
    <updated>2017-11-15T14:10:42.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blurblah.github.io/"/>
    <subtitle>My Site Blog</subtitle>
    <icon>https://blurblah.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[AWS ES with IoT]]></title>
        <id>https://blurblah.github.io/aws-es-with-iot</id>
        <link href="https://blurblah.github.io/aws-es-with-iot"/>
        <updated>2017-11-15T14:10:42.000Z</updated>
        <summary type="html"><![CDATA[AWS ES(Elasticsearch Service)]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="aws-eselasticsearch-service">AWS ES(Elasticsearch Service)<a href="https://blurblah.github.io/aws-es-with-iot#aws-eselasticsearch-service" class="hash-link" aria-label="Direct link to AWS ES(Elasticsearch Service)" title="Direct link to AWS ES(Elasticsearch Service)">​</a></h2>
<p>AWS에서 Elasticsearch를 SaaS 형태로 제공하고 있음<br>
<strong>Price</strong>: Instance type 중에 작은 것(t2.small)도 고를 수 있고 비용은 Oregon 기준 $0.036/h (t2.small)<br>
<strong>Characteristics:</strong></p>
<ul>
<li>Cluster 구성 가능</li>
<li>Domain만 만들면 연결 가능한 endpoint가 자동으로 만들어짐 (with Kibana)</li>
<li>Kibana는 기본적으로 사용자 인증부분이 없는데 AWS에서는 이것을 Access Policy로 해결</li>
<li>Access Policy : IAM, IP기반, public open 등 몇가지 옵션 제공. 설정 변경시 시간이 꽤 걸림</li>
<li>Index 추가할 때 id는 <code>${newuuid()}</code> 형태도 사용 가능</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="elasticsearch">Elasticsearch<a href="https://blurblah.github.io/aws-es-with-iot#elasticsearch" class="hash-link" aria-label="Direct link to Elasticsearch" title="Direct link to Elasticsearch">​</a></h2>
<p>Index는 RDB에서의 database와 유사한 기능으로 생각하면 될 것으로 보임<br>
<!-- -->Type은 index에서 포함될 documents의 종류<br>
<!-- -->Document 하나하나가 RDB에서의 row와 유사하다고 생각할 수 있음<br>
<!-- -->AWS ES에서 index, type은 적당한 이름으로 지정하면 되고 id의 경우 data에서 특정하기 어려우면 generation 되는 값을 이용 (예 : <code>newuuid()</code>)
Index 생성은 원래 ES의 API 호출로 가능<br>
<!-- -->ES에 일반 문자열을 밀어넣었을 때 인식 못함 =&gt; JSON을 문자열 변환 후 넣었을 때 인식<br>
<!-- -->AWS ES에 데이터 넣을 때 id가 generation 되는 값이 아니라 고정 문자열이면 같은 document로 인식하고 값을 update 하는 것으로 보임</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="aws-iot">AWS IoT<a href="https://blurblah.github.io/aws-es-with-iot#aws-iot" class="hash-link" aria-label="Direct link to AWS IoT" title="Direct link to AWS IoT">​</a></h2>
<p>IoT device를 위한 hub 역할<br>
<!-- -->Azure IoT Hub와 유사(pub/sub)<br>
<strong>Rule:</strong></p>
<ul>
<li>다른 service와 연동하기 위한 기능</li>
<li>AWS IoT로 publish되는 message들을 query 형태로 고를 수 있음(attribute, topic, condition)</li>
<li>선택된 조건에 부합하는 message들을 S3, Kinesis, ES 등으로 전달 가능</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="더-살펴볼-문서">더 살펴볼 문서<a href="https://blurblah.github.io/aws-es-with-iot#%EB%8D%94-%EC%82%B4%ED%8E%B4%EB%B3%BC-%EB%AC%B8%EC%84%9C" class="hash-link" aria-label="Direct link to 더 살펴볼 문서" title="Direct link to 더 살펴볼 문서">​</a></h2>
<ul>
<li><a href="https://www.slideshare.net/dahlmoon/20160612" target="_blank" rel="noopener noreferrer">엘라스틱서치 이해하기</a></li>
</ul>]]></content>
        <author>
            <name>Sunchan Lee</name>
            <uri>https://blurblah.github.io</uri>
        </author>
        <category label="aws" term="aws"/>
        <category label="elasticsearch" term="elasticsearch"/>
        <category label="iot" term="iot"/>
    </entry>
</feed>